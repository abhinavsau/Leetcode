Solution 1: brute force

vector<int> twoSum(vector<int> &numbers, int target) {
        int i,j;
        vector<int> v;
        int len = numbers.size();
        for(i=0;i<len;i++)
        {
            int sec = target - numbers[i];
            for(j=i+1;j<len;j++)
            {
                if(sec == numbers[j])
                {
                     v = {i+1,j+1};
                     return v;
                }
            }
        }
    }

Solution 2: Using Hash map

vector<int> twoSum(vector<int>& nums, int target) {
        
        int size = nums.size();
        vector<int> vs;
        if(size == 0)
            return vs;
        map<int,int> mymap;
        for(int i=0;i<size;i++)
        {
            map<int,int>::iterator it= mymap.find(target-nums[i]);
            if( it == mymap.end())
                mymap.insert(pair<int,int>(nums[i],i));
            else
            {
                vs.push_back(it->second + 1);
                vs.push_back(i+1);
                return vs;
            }
        }
        
        return vs;
    }
